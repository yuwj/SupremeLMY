<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="CollapsingToolbarTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">#199793</item>
        <item name="colorPrimaryDark">#199793</item>
        <item name="colorAccent">#199793</item>
        <!-- 加入toolbar溢出【弹出】菜单的风格 -->
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>
    <!-- 自定义button样式:yuwj -->
    <style name="textview_actionbar_btn_style">
        <item name="android:paddingRight">15dp</item>
        <item name="android:paddingLeft">15dp</item>
        <item name="android:paddingTop">3dp</item>
        <item name="android:paddingBottom">3dp</item>
        <item name="android:clickable">true</item>
        <item name="android:textSize">10sp</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:background">@drawable/selector_btn_bg</item>
        <item name="android:gravity">center</item>
    </style>

    <!-- dialog 样式 -->
    <style name="edit_dialog_style" parent="@android:style/Theme.Dialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowFrame">@null</item>
        <!-- 边框 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 是否浮现在activity之上 -->
        <item name="android:windowIsTranslucent">true</item>
        <!-- 半透明 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 无标题 -->
        <item name="android:background">@drawable/shape_la_dia_bg</item>
        <!-- 背景透明 -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- 模糊 -->
        <item name="android:backgroundDimAmount">0.5</item>
    </style>
    <!-- 统计分析模块的popupWindow 弹出动画 -->
    <style name="tongjfx_popupwindow_animate_style">
        <item name="android:windowEnterAnimation">@anim/fade_in_jingqfx_pop</item>
        <item name="android:windowExitAnimation">@anim/fade_out_jingqfx_pop</item>
    </style>
    <!-- 自定义常用textView style author:yuwj -->
    <style name="common_textview_style">
        <item name="android:textSize">12sp</item>
        <item name="android:textColor">@color/gray_color_3</item>
        <item name="android:gravity">center</item>
        <item name="android:paddingTop">2dp</item>
        <item name="android:paddingBottom">2dp</item>
    </style>

    <style name="popwin_anim_style">
        <item name="android:windowEnterAnimation">@anim/ppwindow_show_anim</item>
        <item name="android:windowExitAnimation">@anim/ppwindow_hide_anim</item>
    </style>

    <style name="roomRatingBar" parent="@android:style/Widget.RatingBar">
        <item name="android:progressDrawable">@drawable/rating_bar</item>
        <item name="android:minHeight">16dp</item>
        <item name="android:maxHeight">16dp</item>
    </style>

    <style name="xunlpc_renyxx_detail_title">
        <item name="android:textSize">16sp</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <!-- optionMenu 弹出样式-->
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <item name="android:dropDownWidth">wrap_content</item>
        <item name="android:paddingRight">5dp</item>
        <!-- float menu的图标 -->
        <item name="android:src">@drawable/ic_mian_menu_qingqfw</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:popupBackground">@color/gray_color_2_with_translucence</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">5dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0dp</item>
        <!-- 设置弹出菜单文字颜色 -->
        <item name="android:textColor">@color/white</item>
    </style>

    <!-- viewPager indicator,然后在activity中指定theme为该style-->
    <style name="TabIndicatorStyle" parent="@style/CollapsingToolbarTheme">
        <item name="vpiTabPageIndicatorStyle">@style/CustomTabPageIndicator</item>
    </style>

    <style name="CustomTabPageIndicator" parent="Widget.TabPageIndicator">
        <item name="android:background">@drawable/selector_tabindicator_bottom</item>
        <item name="android:textAppearance">@style/CustomTabPageIndicator.Text</item>
        <item name="android:textSize">14sp</item>
        <item name="android:dividerPadding">8dp</item>
        <item name="android:showDividers">middle</item>
        <item name="android:paddingLeft">10dp</item>
        <item name="android:paddingRight">10dp</item>
        <item name="android:fadingEdge">horizontal</item>
        <item name="android:fadingEdgeLength">8dp</item>
    </style>

    <style name="CustomTabPageIndicator.Text" parent="android:TextAppearance.Medium">
        <item name="android:typeface">monospace</item>
        <item name="android:textColor">@drawable/selector_tabindicator_text</item>
    </style>

    <!-- 加载时的对话框样式 -->
    <style name="loading_progress_dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item><!--边框-->
        <item name="android:windowIsFloating">true</item><!--是否浮现在activity之上-->
        <item name="android:windowIsTranslucent">false</item><!--半透明-->
        <item name="android:windowNoTitle">true</item><!--无标题-->
        <item name="android:windowBackground">@color/transparent</item><!--背景透明-->
        <item name="android:backgroundDimEnabled">false</item><!--模糊-->
    </style>

</resources>
